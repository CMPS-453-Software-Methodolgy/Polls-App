name: Linting, Migrations, and Testing

on:
    workflow_call:
        inputs:
            # the variable you can use in place of a matrix
            python-version:
                required: true
                type: string

jobs:
    Django-Linting:
        runs-on: ubuntu-latest
        name: Django linting using ${{ inputs.python-version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ inputs.python-version }}

            - name: Analysing the code with RUFF and pycodestyle
              run: |
                  source venv/bin/activate
                  pylama .
                  ruff check

    Django-Migrations:
        runs-on: ubuntu-latest
        needs: Django-Linting
        name: Django migrations using ${{ inputs.python-version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ inputs.python-version }}

            - name: Check Django migrations
              run: |
                  source venv/bin/activate
                  python manage.py makemigrations --check
                  python manage.py migrate --check
                  python manage.py check
                  python manage.py check --database default
                  python manage.py check --deploy

    Django-Tests:
        runs-on: ubuntu-latest
        needs: Django-Migrations
        name: Django tests using ${{ inputs.python-version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ inputs.python-version }}

            - name: Run Django tests
              run: |
                  source venv/bin/activate
                  python -m coverage run manage.py test
                  coverage xml
                  coverage html

            - name: Coveralls
              uses: coverallsapp/github-action@v2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: coverage.xml
                  flag-name: run-${{ join(inputs.*, '-') }}
                  parallel: true

    Cypress-Test:
        runs-on: ubuntu-latest
        needs: Django-Migrations
        strategy:
            matrix:
                node: [18, 20, 21]
        name: E2E on Node v${{ matrix.node }} running python v${{ inputs.python-version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ inputs.python-version }}

            - name: Install dependencies
              run: |
                  npm install --save-dev cypress

            - name: Start Django server (in the background)
              run: |
                  source venv/bin/activate
                  python3 manage.py testserver cypress/fixtures/testdb.json --no-input &

            - name: Run Cypress Test
              uses: cypress-io/github-action@v6
              with:
                  command: npx cypress run --headless
                  group: Tests on Node v${{ matrix.node }}
                  cache-key: node-v${{ matrix.node }}-on-${{ runner.os }}-py-${{inputs.python-version }}-hash-${{ hashFiles('yarn.lock') }}
