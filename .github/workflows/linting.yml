name: Linting, Migrations, and Testing

on:
    push:

jobs:
    django-code-quality-check:
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.9', '3.10', '3.11']
                os: [ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        name: Django linting Python v${{ matrix.python-version }} OS- ${{ matrix.os }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Analysing the code with RUFF and pycodestyle
              run: |
                  pylama .
                  ruff check

    django-migrations:
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.9', '3.10', '3.11']
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        needs: django-code-quality-check
        name: Django migrations Python v${{ matrix.python-version }} OS- ${{ matrix.os }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Check Django migrations
              run: |
                  python manage.py makemigrations --check
                  python manage.py migrate --check
                  python manage.py check
                  python manage.py check --database default
                  python manage.py check --deploy

    django-unit-tests:
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.9', '3.10', '3.11']
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        needs: django-migrations
        name: Django tests Python v${{ matrix.python-version }} OS- ${{ matrix.os }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Run Django tests
              run: |
                  python -m coverage run manage.py test
                  coverage xml
                  coverage html

            - name: Coveralls
              uses: coverallsapp/github-action@v2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: coverage.xml
                  flag-name: run-${{ join(matrix.*, '-') }}
                  parallel: true

    cypress-test:
        strategy:
            fail-fast: false
            matrix:
                # Node JS LTS versions
                node: [18, 20]
                python-version: ['3.9', '3.10', '3.11']
                os: [ubuntu-latest]
                browser: [chrome, edge]
        runs-on: ${{ matrix.os }}
        needs: django-migrations
        name: E2E on Node v${{ matrix.node }} Python v${{ matrix.python-version }} OS- ${{ matrix.os }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'

            - name: build
              uses: ./.github/actions/build
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  npm install --save-dev cypress

            - name: Start Django server (in the background)
              run: |
                  python3 manage.py testserver cypress/fixtures/testdb.json --no-input &

            - name: Run Cypress Test
              uses: cypress-io/github-action@v6
              with:
                  parallel: true
                  browser: ${{ matrix.browser }}
                  group: Tests on Node v${{ matrix.node }} in ${{ matrix.browser }} on ${{ runner.os }} running ${{ matrix.python-version }}
                  cache-key: node-v${{ matrix.node }}-run-in-${{ matrix.browser }}-on-${{ runner.os }}-py-${{ matrix.python-version }}-hash-${{ hashFiles('yarn.lock') }}
